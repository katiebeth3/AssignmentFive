@*@model IEnumerable<AssignmentFive.Models.Activity>

@{
    ViewBag.Title = "Activities";
}

<h2>Activities</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.ActivityName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ActivityDate)
        </th>
        
        <th>@Html.DisplayNameFor(model => model.TripLeader.TripLeaderID)</th>
        <th>
            @Html.DisplayNameFor(model => model.ActivityParticipants)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ActivityCategory)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ActivityDescription)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ActivityLengthHours)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ActivityText)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.ActivityName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ActivityDate)
        </td>       
        <td>
            @Html.DisplayFor(modelItem => item.TripLeader.LastName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ActivityParticipants)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ActivityCategory)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ActivityDescription)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ActivityLengthHours)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ActivityText)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ID }) |
            @Html.ActionLink("Details", "Details", new { id=item.ID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ID })
        </td>
    </tr>
}

</table>*@

@model PagedList.IPagedList<AssignmentFive.Models.Activity>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />


@{
    ViewBag.Title = "Activities";
}

<h2>Activities</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
@using (Html.BeginForm("Index", "Activities", FormMethod.Get))
{ <p>
        Find by name or category: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)

        <input type="submit" value="Search" />
    </p> }
<table class="table">
    <tr>
        <th> @Html.ActionLink("Activity Name", "Index", new { sortOrder = ViewBag.NameSortParm }) </th>
              <th> @Html.ActionLink("Activity Date", "Index", new { sortOrder = ViewBag.DateSortParm }) </th>
        <th>Trip Leader</th>
        <th>Participants</th>
        <th>Category</th>
        <th>Description</th>
        <th>Length in Hours</th>
        <th>Text</th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ActivityName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ActivityDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TripLeader.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ActivityParticipants)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ActivityCategory)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ActivityDescription)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ActivityLengthHours)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ActivityText)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ID })
            </td>
        </tr>
    }

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of
@Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Index",
 new
 {
     page,
     sortOrder = ViewBag.CurrentSort,
     currentFilter =
ViewBag.CurrentFilter
 }))




